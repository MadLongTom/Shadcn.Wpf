<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Shadcn.Wpf.Controls">

    <!-- TextBox Template -->
    <ControlTemplate x:Key="ShadcnTextBoxTemplate" TargetType="{x:Type controls:ShadcnTextBox}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Main border with animation support -->
            <Border x:Name="PART_Border"
                    Grid.Row="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{DynamicResource BorderMedium}"
                    CornerRadius="{DynamicResource RadiusMd}"
                    Padding="{TemplateBinding Padding}"
                    RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Border.RenderTransform>
                
                <Grid>
                    <!-- Placeholder Text with animation support -->
                    <TextBlock x:Name="PART_Placeholder"
                              Text="{TemplateBinding Placeholder}"
                              Foreground="{DynamicResource MutedForegroundBrush}"
                              VerticalAlignment="Center"
                              IsHitTestVisible="False"
                              Visibility="Collapsed"
                              Opacity="0">
                        <TextBlock.RenderTransform>
                            <TranslateTransform X="0" Y="0"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    
                    <!-- Actual TextBox -->
                    <ScrollViewer x:Name="PART_ContentHost"
                                Background="Transparent"
                                BorderThickness="{DynamicResource BorderNone}"
                                VerticalAlignment="Center"/>
                </Grid>
            </Border>
            
            <!-- Helper Text -->
            <TextBlock x:Name="PART_HelperText"
                      Grid.Row="1"
                      Text="{TemplateBinding HelperText}"
                      FontSize="{DynamicResource FontSizeXs}"
                      Foreground="{DynamicResource MutedForegroundBrush}"
                      Margin="{DynamicResource SpacingTopXs}"
                      Visibility="Visible"/>
        </Grid>
        
        <ControlTemplate.Triggers>
            <!-- Show placeholder when empty and not focused with fade animation -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Text" Value=""/>
                    <Condition Property="IsKeyboardFocused" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Placeholder" Property="Visibility" Value="Visible"/>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Placeholder"
                                           Storyboard.TargetProperty="Opacity"
                                           To="1"
                                           Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Placeholder"
                                           Storyboard.TargetProperty="Opacity"
                                           To="0"
                                           Duration="0:0:0.15">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            
            <!-- Mouse hover effects -->
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                           To="1.01"
                                           Duration="0:0:0.15">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                           To="1.01"
                                           Duration="0:0:0.15">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                           To="1"
                                           Duration="0:0:0.15">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                           To="1"
                                           Duration="0:0:0.15">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            
            <!-- Default state - show subtle border -->
            <Trigger Property="IsKeyboardFocused" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource InputBrush}"/>
            </Trigger>
            
            <!-- Focus state with smooth border color transition and scale -->
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource RingBrush}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                           To="1.02"
                                           Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                           To="1.02"
                                           Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                           To="1"
                                           Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                           To="1"
                                           Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            
            <!-- Invalid state with shake animation -->
            <Trigger Property="IsInvalid" Value="True">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource DestructiveBrush}"/>
                <Setter TargetName="PART_HelperText" Property="Foreground" Value="{DynamicResource DestructiveBrush}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Shake animation -->
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Placeholder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.05" Value="5"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="-5"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="3"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="-3"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Border"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                <LinearDoubleKeyFrame KeyTime="0:0:0.05" Value="1.01"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.99"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="1.005"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="0.995"/>
                                <LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
            
            <!-- Disabled state with fade animation -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Cursor" Value="No"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="Opacity"
                                           To="0.5"
                                           Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Border"
                                           Storyboard.TargetProperty="Opacity"
                                           To="1"
                                           Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            
            <!-- Hide helper text when empty or null -->
            <Trigger Property="HelperText" Value="">
                <Setter TargetName="PART_HelperText" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HelperText" Value="{x:Null}">
                <Setter TargetName="PART_HelperText" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Default TextBox Style -->
    <Style TargetType="{x:Type controls:ShadcnTextBox}">
        <Setter Property="Template" Value="{DynamicResource ShadcnTextBoxTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{DynamicResource BorderMedium}"/>
        <Setter Property="Padding" Value="{DynamicResource ComponentPaddingMd}"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="{DynamicResource ControlHeightMd}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource RingBrush}"/>
        <Setter Property="SelectionOpacity" Value="0.3"/>
    </Style>

    <!-- Large TextBox Style -->
    <Style x:Key="ShadcnTextBoxLargeStyle" TargetType="{x:Type controls:ShadcnTextBox}"
           BasedOn="{StaticResource {x:Type controls:ShadcnTextBox}}">
        <Setter Property="Padding" Value="{DynamicResource ComponentPaddingLg}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeMd}"/>
        <Setter Property="MinHeight" Value="{DynamicResource ControlHeightLg}"/>
    </Style>

    <!-- Small TextBox Style -->
    <Style x:Key="ShadcnTextBoxSmallStyle" TargetType="{x:Type controls:ShadcnTextBox}"
           BasedOn="{StaticResource {x:Type controls:ShadcnTextBox}}">
        <Setter Property="Padding" Value="{DynamicResource ComponentPaddingSm}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeXs}"/>
        <Setter Property="MinHeight" Value="{DynamicResource ControlHeightSm}"/>
    </Style>

</ResourceDictionary>
