<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Shadcn.Wpf.Controls">

    <!-- Merge Typography resources to make them available in this context -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Typography.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Default Style for ShadcnListBox -->
    <Style TargetType="{x:Type controls:ShadcnListBox}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSm}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeightNormal}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ShadcnListBox}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="ScrollViewer"
                                      Focusable="false"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Variant Triggers -->
                        <Trigger Property="Variant" Value="Outline">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Variant" Value="Ghost">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        
                        <!-- Size Triggers -->
                        <Trigger Property="Size" Value="Small">
                            <Setter Property="FontSize" Value="{StaticResource FontSizeXs}"/>
                            <Setter Property="Padding" Value="2"/>
                        </Trigger>
                        <Trigger Property="Size" Value="Large">
                            <Setter Property="FontSize" Value="{StaticResource FontSizeBase}"/>
                            <Setter Property="Padding" Value="6"/>
                        </Trigger>
                        
                        <!-- State Triggers -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MutedBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource MutedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Style for ShadcnListBoxItem -->
    <Style TargetType="{x:Type controls:ShadcnListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSm}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeightNormal}"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ShadcnListBoxItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.FontFamily="{TemplateBinding FontFamily}"
                                          TextElement.FontSize="{TemplateBinding FontSize}"
                                          TextElement.FontWeight="{TemplateBinding FontWeight}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover State -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
                        </MultiTrigger>
                        
                        <!-- Selected State -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
                        </Trigger>
                        
                        <!-- Selected + Hover State -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
                            <Setter TargetName="Border" Property="Opacity" Value="0.9"/>
                        </MultiTrigger>
                        
                        <!-- Focus State -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource RingBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="Border" Property="Margin" Value="-1"/>
                        </Trigger>
                        
                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource MutedForegroundBrush}"/>
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MutedForegroundBrush}"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Size-based triggers for ListBoxItem -->
            <DataTrigger Binding="{Binding Size, RelativeSource={RelativeSource AncestorType=controls:ShadcnListBox}}" Value="Small">
                <Setter Property="Padding" Value="6,4"/>
                <Setter Property="FontSize" Value="{StaticResource FontSizeXs}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Size, RelativeSource={RelativeSource AncestorType=controls:ShadcnListBox}}" Value="Large">
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FontSize" Value="{StaticResource FontSizeBase}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
