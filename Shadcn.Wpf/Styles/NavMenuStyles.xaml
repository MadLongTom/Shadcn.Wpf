<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Shadcn.Wpf.Controls"
                    xmlns:models="clr-namespace:Shadcn.Wpf.Models"
                    xmlns:converters="clr-namespace:Shadcn.Wpf.Converters">

    <!-- Import Icons -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Converters -->
    <converters:BooleanToDoubleConverter x:Key="BooleanToDoubleConverter"/>

    <!-- Navigation Item Template -->
    <DataTemplate x:Key="NavigationItemTemplate" DataType="{x:Type models:NavigationItem}">
        <StackPanel Margin="0,0,0,4">
            <!-- Main Item -->
            <Button x:Name="NavItemButton"
                    Command="{Binding ClickCommand}"
                    Background="Transparent"
                    BorderThickness="0"
                    Padding="12,8"
                    HorizontalContentAlignment="Left"
                    Cursor="Hand">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="Transparent"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="6"
                                            Padding="{TemplateBinding Padding}">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                            <Setter Property="Opacity" Value="0.5"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="True">
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    
                    <!-- Icon -->
                    <Path Grid.Column="0"
                          Data="{Binding Icon}"
                          Fill="{DynamicResource ForegroundBrush}"
                          Width="16"
                          Height="16"
                          Stretch="Uniform"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Margin" Value="0,0,12,0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="True">
                                        <Setter Property="Margin" Value="0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                        <Setter Property="Fill" Value="{DynamicResource PrimaryForegroundBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    
                    <!-- Title -->
                    <TextBlock Grid.Column="1"
                               Text="{Binding Title}"
                               FontSize="14"
                               FontWeight="Medium"
                               Foreground="{DynamicResource ForegroundBrush}"
                               VerticalAlignment="Center"
                               TextTrimming="CharacterEllipsis">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    
                    <!-- Badge -->
                    <Border Grid.Column="2"
                            Background="{DynamicResource DestructiveBrush}"
                            CornerRadius="10"
                            Padding="6,2"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Badge}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Badge}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <TextBlock Text="{Binding Badge}"
                                   FontSize="10"
                                   FontWeight="Bold"
                                   Foreground="White"
                                   HorizontalAlignment="Center"/>
                    </Border>
                    
                    <!-- Expand/Collapse Icon -->
                    <Path Grid.Column="3"
                          Data="{DynamicResource ChevronRightIcon}"
                          Fill="{DynamicResource MutedForegroundBrush}"
                          Width="12"
                          Height="12"
                          Stretch="Uniform"
                          VerticalAlignment="Center"
                          Margin="8,0,0,0"
                          RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <RotateTransform x:Name="ExpandIconRotation" Angle="0"/>
                        </Path.RenderTransform>
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasChildren}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="90"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </Grid>
            </Button>
            
            <!-- Children -->
            <ItemsControl ItemsSource="{Binding Children}"
                          Margin="24,0,0,0"
                          RenderTransformOrigin="0.5,0">
                <ItemsControl.RenderTransform>
                    <ScaleTransform ScaleY="1"/>
                </ItemsControl.RenderTransform>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:NavigationItem}">
                        <Button Command="{Binding ClickCommand}"
                                Background="Transparent"
                                BorderThickness="0"
                                Padding="12,8"
                                HorizontalContentAlignment="Left"
                                Cursor="Hand">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="Border"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="Transparent"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="6"
                                                        Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBrush}"/>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Icon -->
                                <Path Grid.Column="0"
                                      Data="{Binding Icon}"
                                      Fill="{DynamicResource ForegroundBrush}"
                                      Width="14"
                                      Height="14"
                                      Stretch="Uniform"
                                      VerticalAlignment="Center"
                                      Margin="0,0,8,0">
                                    <Path.Style>
                                        <Style TargetType="Path">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="Fill" Value="{DynamicResource PrimaryForegroundBrush}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                
                                <!-- Title -->
                                <TextBlock Grid.Column="1"
                                           Text="{Binding Title}"
                                           FontSize="13"
                                           Foreground="{DynamicResource ForegroundBrush}"
                                           VerticalAlignment="Center"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                
                                <!-- Badge -->
                                <Border Grid.Column="2"
                                        Background="{DynamicResource DestructiveBrush}"
                                        CornerRadius="8"
                                        Padding="4,1"
                                        Margin="4,0,0,0"
                                        VerticalAlignment="Center">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Badge}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Badge}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock Text="{Binding Badge}"
                                               FontSize="9"
                                               FontWeight="Bold"
                                               Foreground="White"
                                               HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.Style>
                    <Style TargetType="ItemsControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsExpanded}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ShadcnNavMenu}}, Path=IsCollapsed}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                           From="0"
                                                           To="1"
                                                           Duration="0:0:0.25">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                           From="0"
                                                           To="1"
                                                           Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                           To="0"
                                                           Duration="0:0:0.15"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                           To="0"
                                                           Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <!-- ShadcnNavMenu Default Style -->
    <Style TargetType="{x:Type controls:ShadcnNavMenu}">
        <Setter Property="Background" Value="{DynamicResource CardBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ShadcnNavMenu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            
                            <!-- Header -->
                            <Border Grid.Row="0"
                                    Background="{DynamicResource MutedBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="0,0,0,1"
                                    Padding="16,12">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Header Content -->
                                    <ContentPresenter Grid.Column="0"
                                                     Content="{TemplateBinding Header}"
                                                     VerticalAlignment="Center">
                                        <ContentPresenter.Style>
                                            <Style TargetType="ContentPresenter">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsCollapsed, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentPresenter.Style>
                                    </ContentPresenter>
                                    
                                    <!-- Toggle Button -->
                                    <Button x:Name="PART_ToggleButton"
                                            Grid.Column="1"
                                            Width="32"
                                            Height="32"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Cursor="Hand">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border x:Name="Border"
                                                                    Background="{TemplateBinding Background}"
                                                                    CornerRadius="6"
                                                                    Width="32"
                                                                    Height="32">
                                                                <Path x:Name="ToggleIcon"
                                                                      Data="{DynamicResource ChevronLeftIcon}"
                                                                      Fill="{DynamicResource ForegroundBrush}"
                                                                      Width="16"
                                                                      Height="16"
                                                                      Stretch="Uniform"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"
                                                                      RenderTransformOrigin="0.5,0.5">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform x:Name="ToggleIconRotation" Angle="0"/>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MutedBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ShowToggleButton, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Border>
                            
                            <!-- Navigation Content -->
                            <ScrollViewer Grid.Row="1"
                                          VerticalScrollBarVisibility="Auto"
                                          HorizontalScrollBarVisibility="Disabled"
                                          Padding="8">
                                <ItemsControl x:Name="PART_Content"
                                              ItemsSource="{Binding NavigationItems, RelativeSource={RelativeSource TemplatedParent}}"
                                              ItemTemplate="{StaticResource NavigationItemTemplate}"/>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                    
                    <!-- Width and Toggle Button Animation -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsCollapsed" Value="True">
                            <Setter Property="Width" Value="{Binding CollapsedWidth, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsCollapsed" Value="False">
                            <Setter Property="Width" Value="{Binding ExpandedWidth, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
